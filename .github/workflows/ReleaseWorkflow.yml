# @file ReleaseWorkflow.yml
#
# A reusable CI workflow that releases all crates in a repository.
#
##
# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: Apache-2.0
##
name: Publish

on:
  workflow_call:
    inputs:
      ignore-prefix:
        description: 'The prefix of the tag that should be ignored when detecting the version'
        required: false
        type: string
        default: 'v'
    secrets:
      PATINA_CRATES_IO_TOKEN:
        description: 'The token to use for authenticating with crates.io.'
        required: true

jobs:
  run:
    name: Publish

    runs-on: ubuntu-latest

    permissions:
      contents: write
      actions: read

    steps:
      - name: ✅ Checkout Repository ✅
        uses: actions/checkout@v4

      - name: 🛠️ Download Rust Tools 🛠️
        uses: OpenDevicePartnership/patina/.github/actions/rust-tool-cache@main

      - name: Get Release Tag
        id: release_tag
        run: |
          tag_name="${{ github.event.release.tag_name }}"
          prefix="${{ inputs.ignore-prefix }}"

          # remove leading prefix if it exists
          release_tag="${tag_name#"$prefix"}"

          echo "Release Tag: $release_tag"
          echo "tag=$release_tag" >> $GITHUB_OUTPUT
        shell: bash

      - name: Setup Cred Provider
        run: |
          mkdir -p ~/.cargo
          cat <<EOF >> ~/.cargo/config.toml
          [registry]
          global-credential-providers = ["cargo:token"]
          EOF

      - name: Update git credentials
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Checkout New Branch
        run: |
          git checkout -b "github-actions/release-${{ steps.release_tag.outputs.tag }}"
          git push origin "github-actions/release-${{ steps.release_tag.outputs.tag }}"

      - name: Login to Registry
        run: cargo login "${{ secrets.PATINA_CRATES_IO_TOKEN }}"

      - name: Check Skip Cargo Release
        id: check_skip_dry_run
        shell: python
        run: |
          import os

          if "(skip cargo release dry run)" in os.getenv("RELEASE_BODY", ""):
            with open(os.environ["GITHUB_OUTPUT"], "a") as f:
              f.write("skip=true\n")
            print("Skipping cargo release as requested in release description")
        env:
          RELEASE_BODY: ${{ github.event.release.body }}

      - name: Cargo Release Dry Run
        if: steps.check_skip_dry_run.outputs.skip != 'true'
        run: cargo release ${{ steps.release_tag.outputs.tag }} --no-tag --workspace
        env:
          RUSTC_BOOTSTRAP: 1

      - name: Cargo Release
        run: cargo release ${{ steps.release_tag.outputs.tag }} -x --no-tag --no-confirm --workspace
        env:
          RUSTC_BOOTSTRAP: 1

      - name: Notify Branch Creation
        uses: actions/github-script@v7
        with:
          script: |
            const branch = `github-actions/release-${{ steps.release_tag.outputs.tag }}`;
            const baseBranch = context.payload.repository.default_branch;
            const repo = context.repo;

            const prUrl = `https://github.com/${repo.owner}/${repo.repo}/compare/${baseBranch}...${branch}?expand=1`;

            core.warning('A pull request needs to be created to update the version');
            core.info(`Click the link below to create the pull request:`);
            core.info(prUrl);

      # TODO: Add ability for a github app to create a release from the published branch
